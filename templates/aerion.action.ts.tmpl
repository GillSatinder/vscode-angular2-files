import { Action } from '@ngrx/store';
import { ${inputName.charAt(0).toUpperCase() + inputName.slice(1)} } from '../models/${inputName.charAt(0).toUpperCase() + inputName.slice(1)}s';
import { ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}Page } from '../models/${inputName.charAt(0).toUpperCase() + inputName.slice(1)}Page';
import { PageRequest } from '../../../models/pageRequest';

export enum ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}ActionTypes {
  GET_ALL_${inputName.toUpperCase()}S = '[${inputName.toUpperCase()}] GET_ALL_${inputName.toUpperCase()}S',
  GET_${inputName.toUpperCase()} = '[${inputName.toUpperCase()}] GET_${inputName.toUpperCase()}',
  GET_${inputName.toUpperCase()}_SUCCESS = '[${inputName.toUpperCase()}] GET_${inputName.toUpperCase()}_SUCCESS',

  CREATE_${inputName.toUpperCase()} = '[${inputName.toUpperCase()}] CREATE_${inputName.toUpperCase()}',
  CREATE_${inputName.toUpperCase()}_SUCCESS = '[${inputName.toUpperCase()}] CREATE_${inputName.toUpperCase()}_SUCCESS',
  UPDATE_${inputName.toUpperCase()} = '[${inputName.toUpperCase()}] UPDATE_${inputName.toUpperCase()}',
  UPDATE_${inputName.toUpperCase()}_SUCCESS = '[${inputName.toUpperCase()}] UPDATE_${inputName.toUpperCase()}_SUCCESS',
  DELETE_${inputName.toUpperCase()} = '[${inputName.toUpperCase()}] DELETE_${inputName.toUpperCase()}',
  DELETE_${inputName.toUpperCase()}_SUCCESS = '[${inputName.toUpperCase()}] DELETE_${inputName.toUpperCase()}_SUCCESS',
  SET_${inputName.toUpperCase()}_PAGE = '[${inputName.toUpperCase()}] SET_${inputName.toUpperCase()}_PAGE',
  APIFailed = '[${inputName.toUpperCase()}] API_FAILED',

  VALIDATION_FAILED = '[${inputName.toUpperCase()}] VALIDATION_FAILED',

}

export class Create${inputName.charAt(0).toUpperCase() + inputName.slice(1)} implements Action {
  readonly type = ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}ActionTypes.CREATE_${inputName.toUpperCase()};
  constructor(public payload: ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}) { }
}
export class Create${inputName.charAt(0).toUpperCase() + inputName.slice(1)}Success implements Action {
  readonly type = ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}ActionTypes.CREATE_${inputName.toUpperCase()}_SUCCESS;
  constructor(public payload: ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}) { }
}

export class Update${inputName.charAt(0).toUpperCase() + inputName.slice(1)} implements Action {
  readonly type = ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}ActionTypes.UPDATE_${inputName.toUpperCase()};
  constructor(public payload: ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}) { }
}

export class Update${inputName.charAt(0).toUpperCase() + inputName.slice(1)}Success implements Action {
  readonly type = ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}ActionTypes.UPDATE_${inputName.toUpperCase()}_SUCCESS;
}

export class Delete${inputName.charAt(0).toUpperCase() + inputName.slice(1)} implements Action {
  readonly type = ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}ActionTypes.DELETE_${inputName.toUpperCase()};
  constructor(public payload: string) { }
}
export class Delete${inputName.charAt(0).toUpperCase() + inputName.slice(1)}Success implements Action {
  readonly type = ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}ActionTypes.DELETE_${inputName.toUpperCase()}_SUCCESS;
}

export class GetAll${inputName.charAt(0).toUpperCase() + inputName.slice(1)}s implements Action {
  readonly type = ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}ActionTypes.GET_ALL_${inputName.toUpperCase()}S;
  constructor(public payload: PageRequest) { }

}
export class Get${inputName.charAt(0).toUpperCase() + inputName.slice(1)} implements Action {
  readonly type = ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}ActionTypes.GET_${inputName.toUpperCase()};
  constructor(public payload: string) { }
}

export class Set${inputName.charAt(0).toUpperCase() + inputName.slice(1)}Page implements Action {
  readonly type = ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}ActionTypes.SET_${inputName.toUpperCase()}_PAGE;
  constructor(public payload: ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}Page) { }
}

export class ApiFailed implements Action {
  readonly type = ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}ActionTypes.APIFailed;
  constructor(public payload: any) { }
}

export class ValidationFailed implements Action {
  readonly type = ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}ActionTypes.VALIDATION_FAILED;
  constructor(public payload: any) { }
}

export class Get${inputName.charAt(0).toUpperCase() + inputName.slice(1)}Success implements Action {
  readonly type = ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}ActionTypes.GET_${inputName.toUpperCase()}_SUCCESS;
  constructor(public payload: ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}) { }
}

export type ${inputName.charAt(0).toUpperCase() + inputName.slice(1)}ActionsUnion =
  | Create${inputName.charAt(0).toUpperCase() + inputName.slice(1)}
  | Create${inputName.charAt(0).toUpperCase() + inputName.slice(1)}Success
  | Update${inputName.charAt(0).toUpperCase() + inputName.slice(1)}
  | Update${inputName.charAt(0).toUpperCase() + inputName.slice(1)}Success
  | Delete${inputName.charAt(0).toUpperCase() + inputName.slice(1)}
  | Delete${inputName.charAt(0).toUpperCase() + inputName.slice(1)}Success
  | GetAll${inputName.charAt(0).toUpperCase() + inputName.slice(1)}s
  | Get${inputName.charAt(0).toUpperCase() + inputName.slice(1)}
  | Set${inputName.charAt(0).toUpperCase() + inputName.slice(1)}Page
  | ApiFailed
  | ValidationFailed
  | Get${inputName.charAt(0).toUpperCase() + inputName.slice(1)}Success
  ;
