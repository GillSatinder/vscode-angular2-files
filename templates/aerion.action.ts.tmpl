import { Action } from '@ngrx/store';
import { ${modelName} } from '../models/${modelName.toLowerCase()}';
import { ${modelName}Page } from '../models/${modelName.toLowerCase() }Page';
import { PageRequest } from '../../../models/pageRequest';

export enum ${modelName}ActionTypes {
  GET_ALL_${modelName.toUpperCase()}S = '[${modelName.toUpperCase()}] GET_ALL_${modelName.toUpperCase()}S',
  GET_${modelName.toUpperCase()} = '[${modelName.toUpperCase()}] GET_${modelName.toUpperCase()}',
  GET_${modelName.toUpperCase()}_SUCCESS = '[${modelName.toUpperCase()}] GET_${modelName.toUpperCase()}_SUCCESS',

  CREATE_${modelName.toUpperCase()} = '[${modelName.toUpperCase()}] CREATE_${modelName.toUpperCase()}',
  CREATE_${modelName.toUpperCase()}_SUCCESS = '[${modelName.toUpperCase()}] CREATE_${modelName.toUpperCase()}_SUCCESS',
  UPDATE_${modelName.toUpperCase()} = '[${modelName.toUpperCase()}] UPDATE_${modelName.toUpperCase()}',
  UPDATE_${modelName.toUpperCase()}_SUCCESS = '[${modelName.toUpperCase()}] UPDATE_${modelName.toUpperCase()}_SUCCESS',
  DELETE_${modelName.toUpperCase()} = '[${modelName.toUpperCase()}] DELETE_${modelName.toUpperCase()}',
  DELETE_${modelName.toUpperCase()}_SUCCESS = '[${modelName.toUpperCase()}] DELETE_${modelName.toUpperCase()}_SUCCESS',
  SET_${modelName.toUpperCase()}_PAGE = '[${modelName.toUpperCase()}] SET_${modelName.toUpperCase()}_PAGE',
  APIFailed = '[${modelName.toUpperCase()}] API_FAILED',

  VALIDATION_FAILED = '[${modelName.toUpperCase()}] VALIDATION_FAILED',

}

export class Create${modelName} implements Action {
  readonly type = ${modelName}ActionTypes.CREATE_${modelName.toUpperCase()};
  constructor(public payload: ${modelName}) { }
}
export class Create${modelName}Success implements Action {
  readonly type = ${modelName}ActionTypes.CREATE_${modelName.toUpperCase()}_SUCCESS;
  constructor(public payload: ${modelName}) { }
}

export class Update${modelName} implements Action {
  readonly type = ${modelName}ActionTypes.UPDATE_${modelName.toUpperCase()};
  constructor(public payload: ${modelName}) { }
}

export class Update${modelName}Success implements Action {
  readonly type = ${modelName}ActionTypes.UPDATE_${modelName.toUpperCase()}_SUCCESS;
}

export class Delete${modelName} implements Action {
  readonly type = ${modelName}ActionTypes.DELETE_${modelName.toUpperCase()};
  constructor(public payload: string) { }
}
export class Delete${modelName}Success implements Action {
  readonly type = ${modelName}ActionTypes.DELETE_${modelName.toUpperCase()}_SUCCESS;
}

export class GetAll${modelName}s implements Action {
  readonly type = ${modelName}ActionTypes.GET_ALL_${modelName.toUpperCase()}S;
  constructor(public payload: PageRequest) { }

}
export class Get${modelName} implements Action {
  readonly type = ${modelName}ActionTypes.GET_${modelName.toUpperCase()};
  constructor(public payload: string) { }
}

export class Set${modelName}Page implements Action {
  readonly type = ${modelName}ActionTypes.SET_${modelName.toUpperCase()}_PAGE;
  constructor(public payload: ${modelName}Page) { }
}

export class ApiFailed implements Action {
  readonly type = ${modelName}ActionTypes.APIFailed;
  constructor(public payload: any) { }
}

export class ValidationFailed implements Action {
  readonly type = ${modelName}ActionTypes.VALIDATION_FAILED;
  constructor(public payload: any) { }
}

export class Get${modelName}Success implements Action {
  readonly type = ${modelName}ActionTypes.GET_${modelName.toUpperCase()}_SUCCESS;
  constructor(public payload: ${modelName}) { }
}

export type ${modelName}ActionsUnion =
  | Create${modelName}
  | Create${modelName}Success
  | Update${modelName}
  | Update${modelName}Success
  | Delete${modelName}
  | Delete${modelName}Success
  | GetAll${modelName}s
  | Get${modelName}
  | Set${modelName}Page
  | ApiFailed
  | ValidationFailed
  | Get${modelName}Success
  ;
