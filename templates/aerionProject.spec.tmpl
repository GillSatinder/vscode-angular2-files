import {${modelName}Service} from './${modelName.toLowerCase()}-service';
import {async, ComponentFixture, TestBed} from '@angular/core/testing';
import {CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA} from '@angular/core';
import {FormBuilder, FormGroup, FormsModule, ReactiveFormsModule} from '@angular/forms';
import {ActivatedRoute, Router} from '@angular/router';
import {BrowserModule} from '@angular/platform-browser';
import {${modelName}CreateComponent} from './${modelName.toLowerCase()}-create/${modelName.toLowerCase()}-create.component';
import {BaseComponent} from '../base.component';
import {${modelName}Component} from './${modelName.toLowerCase()}.component';
import {BlockUIModule} from 'ng-block-ui';
import {Observable, of} from 'rxjs';
import {AuthService} from '../auth/auth.service';

class Mock${modelName}Service {
  errorMessage$: Observable<any> = of('error');
  loading$: Observable<boolean> = of(true);
  goToCreate() {}
}
class MockAuthService {}
describe('${modelName}Component', () => {
  let component: ${modelName}Component;
  let fixture: ComponentFixture<${modelName}Component>;
  let ${modelName.toLowerCase()}Service: ${modelName}Service;
  beforeEach(async(() => {
    TestBed.configureTestingModule({

      declarations: [${modelName}Component],
      providers: [
        {provide: ${modelName}Service, useClass: Mock${modelName}Service},
        {provide: AuthService, useClass: MockAuthService},
      ],
      imports: [
        FormsModule,
        BrowserModule,
        ReactiveFormsModule,
        BlockUIModule.forRoot()
      ],
      schemas: [CUSTOM_ELEMENTS_SCHEMA, NO_ERRORS_SCHEMA]
    }).compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(${modelName}Component);
    component = fixture.componentInstance;
    ${modelName.toLowerCase()}Service = fixture.debugElement.injector.get(${modelName}Service);
   // fixture.detectChanges();

  });

  it('should create', () => {

    // verify
    expect(component).toBeDefined();
  });

  describe('ngOnInit()', () => {
    it('should listen to errorMessage and loading of the component', () => {
      // setup
      spyOn(component.loading, 'start');


      // act
       component.ngOnInit();

     // verify
     ${modelName.toLowerCase()}Service.loading$.subscribe(res => {
       expect(res).toBe(true);
       // if true it will start loading
       expect(component.loading.start).toHaveBeenCalled();
     });

     expect(component.errorMessage$).toBeDefined();
     expect(component.loadingSubscription).toBeDefined();
    });
  });

  describe('onCreateClick()',  () =>  {
    it('calls goToCreate() of ${modelName}Service', () => {
      // setup
      spyOn(${modelName.toLowerCase()}Service, 'goToCreate');

      // act
      component.onCreateClick();

      // verify
      expect(${modelName.toLowerCase()}Service.goToCreate).toHaveBeenCalled();
    });
  });
});
